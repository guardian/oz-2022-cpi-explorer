library(readabs)
setwd("~/Documents/projects/2022/jun/inflation")
library(readxl)
cpi <- read_abs("6401.0")
things_index <- cpi[cpi$table_title == "TABLE 9. CPI: Group, Sub-group and Expenditure Class, Index Numbers by Capital City", ]
write.csv(things_index,"cpi-index.csv", row.names = FALSE)
cpi <- read_abs("6401.0")
things_index <- cpi[cpi$table_title == "TABLE 9. CPI: Group, Sub-group and Expenditure Class, Index Numbers by Capital City", ]
things_index <- cpi[cpi$table_title == "TABLE 9. CPI: Group, Sub-group and Expenditure Class, Index Numbers by Capital City", ]
write.csv(things_index,"cpi-index.csv", row.names = FALSE)
things_pct <- cpi[cpi$table_title == "TABLE 10. CPI: Group, Sub-group and Expenditure Class, Percentage change from corresponding quarter of previous year by Capital City", ]
write.csv(things_pct,"cpi-pct.csv", row.names = FALSE)
library(readabs)
library(readxl)
cpi <- read_abs("6401.0")
write.csv(things_index,"cpi-index.csv", row.names = FALSE)
write.csv(things_index,"cpi-index.csv", row.names = FALSE)
things_index <- cpi[cpi$table_title == "TABLE 9. CPI: Group, Sub-group and Expenditure Class, Index Numbers by Capital City", ]
write.csv(things_index,"cpi-index.csv", row.names = FALSE)
things_pct <- cpi[cpi$table_title == "TABLE 10. CPI: Group, Sub-group and Expenditure Class, Percentage change from corresponding quarter of previous year by Capital City", ]
write.csv(things_pct,"cpi-pct.csv", row.names = FALSE)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(readr)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(readr)
library(magrittr)
library(lubridate)
library(mgcv)
library(tidymv)
library(gratia)
polling <- read.csv("inter/polling.csv")
setwd("~/Documents/projects/2023/may/the-voice-polling")
library(dplyr)
library(ggplot2)
library(tidyverse)
library(readr)
library(magrittr)
library(lubridate)
library(mgcv)
library(tidymv)
library(gratia)
polling <- read.csv("inter/polling.csv")
polling<- polling %>% arrange(ymd(polling$Date))
polling$t <- 1:nrow(polling)
#
# polling$Date <- ymd(polling$Date)
polling$Date <- as.Date(polling$Date, format="%Y-%m-%d")
polling <- polling %>%
mutate(num_date = as.numeric(as.POSIXct(Date)))
polling
# https://www.rdocumentation.org/packages/mgcv/versions/1.8-42/topics/gam
# REML appears to the default
# I am not sure if the weights is what I actually need to weight the CI by the sample size
gam_mod <- gam(Yes ~ s(num_date), weights=Sample,  data = polling, method = "REML")
summary(gam_mod)
# polling <- polling %>%
#   mutate(Gam = fitted(gam_mod))
#
# polling<- polling %>% arrange(ymd(polling$Date))
# polling
#
# plot_smooths(
#   model = gam_mod,
#   series = num_date,
# ) +
#   theme(legend.position = "top")
### Get the fitted values
fv <- fitted_values(gam_mod)
fv <- fv %>%
mutate(Date = as.Date(as.POSIXct(num_date, origin="1970-01-01")))
write.csv(fv, "inter/fitted.csv")
library(readabs)
setwd("~/Documents/projects/2022/jun/inflation")
library(readabs)
library(readabs)
library(readxl)
cpi <- read_abs("6401.0")
things_index <- cpi[cpi$table_title == "TABLE 9. CPI: Group, Sub-group and Expenditure Class, Index Numbers by Capital City", ]
write.csv(things_index,"cpi-index.csv", row.names = FALSE)
things_pct <- cpi[cpi$table_title == "TABLE 10. CPI: Group, Sub-group and Expenditure Class, Percentage change from corresponding quarter of previous year by Capital City", ]
write.csv(things_pct,"cpi-pct.csv", row.names = FALSE)
setwd("~/Documents/projects/2024/apr/facebook-news-decline/replicate/dataverse_files")
ggplot2::theme_set(theme_bw())
library(ggplot2)
load("australian_media_list.df.RData")
load("ct_au_media_dat.RData")
View(dat)
as.Date(min(dat$posix))
benchmarking <- function(x) {
x <- x[x > quantile(x, probs = .25) &
x < quantile(x, probs = .75)]
return(mean(x, na.rm =T))
}
computePerfScoreInteractions <- function(i) {
this_dat <-
dat_wt_benchmark %>%
dplyr::filter(day >= this_seq[i] - 14 &
day < this_seq[i] + 15) %>%
dplyr::group_by(Page.Name, page_type) %>%
dplyr::summarize(Performance.Score =
benchmarking(Interactions) /
benchmark.score[1])
this_dat$day <-
this_seq[i]
return(this_dat)
}
computePerfScoreComments <- function(i) {
this_dat <-
dat_wt_benchmark %>%
dplyr::filter(day >= this_seq[i] - 14 &
day < this_seq[i] + 15) %>%
dplyr::group_by(Page.Name, page_type) %>%
dplyr::summarize(Performance.Score =
benchmarking(Comments) /
benchmark.score[1])
this_dat$day <-
this_seq[i]
return(this_dat)
}
computePerfScoreShares <- function(i) {
this_dat <-
dat_wt_benchmark %>%
dplyr::filter(day >= this_seq[i] - 14 &
day < this_seq[i] + 15) %>%
dplyr::group_by(Page.Name, page_type) %>%
dplyr::summarize(Performance.Score =
benchmarking(Shares) /
benchmark.score[1])
this_dat$day <-
this_seq[i]
return(this_dat)
}
benchmarking_timeframe <-
c(as.Date("2017-01-01"), as.Date("2017-04-01"))
date_limits <-
c(as.Date("2014-01-01"), as.Date("2020-12-15"))
dat %>%
dplyr::filter(Page.Name %in% c("Daily Mail Australia",
"ABC News", "Mamamia",
"Guardian Australia"),
posix >= as.Date("2017-09-01") &
posix < as.Date("2018-12-01")) %>%
dplyr::group_by(Page.Name, date = as.Date(posix)) %>%
dplyr::count() %>%
dplyr::ungroup() %>%
dplyr::group_by(Page.Name) %>%
dplyr::arrange(date) %>%
dplyr::mutate(n_ma7 = rollmean(n, 7, fill = NA)) %>%
ggplot(aes(x = date, y = n_ma7)) +
geom_line() +
facet_wrap(Page.Name~., ncol = 4) +
labs(x = NULL, y = "postings") +
scale_x_date(date_labels = "%b %Y", limits = as.Date(c("2017-10-01", "2018-10-31"))) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
library(ggplot2)
ggplot2::theme_set(theme_bw())
knitr::opts_chunk$set(
dev = "pdf", fig.width = 8, fig.height = 7, dpi=300, message=FALSE, warning=FALSE
)
library(dplyr)
dat %>%
dplyr::filter(Page.Name %in% c("Daily Mail Australia",
"ABC News", "Mamamia",
"Guardian Australia"),
posix >= as.Date("2017-09-01") &
posix < as.Date("2018-12-01")) %>%
dplyr::group_by(Page.Name, date = as.Date(posix)) %>%
dplyr::count() %>%
dplyr::ungroup() %>%
dplyr::group_by(Page.Name) %>%
dplyr::arrange(date) %>%
dplyr::mutate(n_ma7 = rollmean(n, 7, fill = NA)) %>%
ggplot(aes(x = date, y = n_ma7)) +
geom_line() +
facet_wrap(Page.Name~., ncol = 4) +
labs(x = NULL, y = "postings") +
scale_x_date(date_labels = "%b %Y", limits = as.Date(c("2017-10-01", "2018-10-31"))) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
required_packages <-
c("tidyverse", "readxl", "zoo", "parallel", "kableExtra")
new_packages <-
required_packages[!(required_packages %in%
installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
lapply(required_packages, require, character.only = TRUE)
sessionInfo()
library(ggplot2)
ggplot2::theme_set(theme_bw())
knitr::opts_chunk$set(
dev = "pdf", fig.width = 8, fig.height = 7, dpi=300, message=FALSE, warning=FALSE
)
library(dplyr)
required_packages <-
c("tidyverse", "readxl", "zoo", "parallel", "kableExtra", "dplyr", "ggplot")
dat %>%
dplyr::filter(Page.Name %in% c("Daily Mail Australia",
"ABC News", "Mamamia",
"Guardian Australia"),
posix >= as.Date("2017-09-01") &
posix < as.Date("2018-12-01")) %>%
dplyr::group_by(Page.Name, date = as.Date(posix)) %>%
dplyr::count() %>%
dplyr::ungroup() %>%
dplyr::group_by(Page.Name) %>%
dplyr::arrange(date) %>%
dplyr::mutate(n_ma7 = rollmean(n, 7, fill = NA)) %>%
ggplot(aes(x = date, y = n_ma7)) +
geom_line() +
facet_wrap(Page.Name~., ncol = 4) +
labs(x = NULL, y = "postings") +
scale_x_date(date_labels = "%b %Y", limits = as.Date(c("2017-10-01", "2018-10-31"))) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
dat %>%
dplyr::filter(Page.Name %in% c("Daily Mail Australia",
"ABC News", "Mamamia",
"Guardian Australia"),
posix >= as.Date("2017-09-01") &
posix < as.Date("2018-12-01")) %>%
dplyr::group_by(Page.Name, date = as.Date(posix)) %>%
dplyr::count() %>%
dplyr::ungroup() %>%
dplyr::group_by(Page.Name) %>%
dplyr::arrange(date) %>%
dplyr::mutate(n_ma7 = rollmean(n, 7, fill = NA)) %>%
ggplot(aes(x = date, y = n_ma7)) +
geom_line() +
facet_wrap(Page.Name~., ncol = 4) +
labs(x = NULL, y = "postings") +
scale_x_date(date_labels = "%b %Y", limits = as.Date(c("2017-10-01", "2018-10-31"))) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
required_packages <-
c("tidyverse", "readxl", "zoo", "parallel", "kableExtra", "dplyr", "ggplot")
new_packages <-
required_packages[!(required_packages %in%
installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
lapply(required_packages, require, character.only = TRUE)
sessionInfo()
library(ggplot2)
ggplot2::theme_set(theme_bw())
knitr::opts_chunk$set(
dev = "pdf", fig.width = 8, fig.height = 7, dpi=300, message=FALSE, warning=FALSE
)
library(dplyr)
required_packages <-
c("tidyverse", "readxl", "zoo", "parallel", "kableExtra", "dplyr", "ggplot")
new_packages <-
required_packages[!(required_packages %in%
installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
lapply(required_packages, require, character.only = TRUE)
sessionInfo()
install.packages(new_packages)
required_packages <-
c("tidyverse", "readxl", "zoo", "parallel", "kableExtra", "dplyr", "ggplot")
new_packages <-
required_packages[!(required_packages %in%
installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
lapply(required_packages, require, character.only = TRUE)
sessionInfo()
load("australian_media_list.df.RData")
load("ct_au_media_dat.RData")
